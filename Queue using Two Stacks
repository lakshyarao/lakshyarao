#include <stdio.h>
#include <stdlib.h>

#define MAX 100000


typedef struct {
    int items[MAX];
    int top;
} Stack;


void init(Stack* s) {
    s->top = -1;
}


void push(Stack* s, int value) {
    if (s->top < MAX - 1) {
        s->items[++(s->top)] = value;
    }
}


int pop(Stack* s) {
    if (s->top >= 0) {
        return s->items[(s->top)--];
    }
    return -1; 
}


int peek(Stack* s) {
    if (s->top >= 0) {
        return s->items[s->top];
    }
    return -1; 
}


int isEmpty(Stack* s) {
    return s->top == -1;
}


void transfer(Stack* s1, Stack* s2) {
    while (!isEmpty(s1)) {
        push(s2, pop(s1));
    }
}

int main() {
    int q, type, x;
    Stack stackNewest, stackOldest;

    init(&stackNewest);
    init(&stackOldest);

    scanf("%d", &q);
    for (int i = 0; i < q; i++) {
        scanf("%d", &type);
        if (type == 1) {
            scanf("%d", &x);
            push(&stackNewest, x);  
        } else if (type == 2) {
            if (isEmpty(&stackOldest)) {
                transfer(&stackNewest, &stackOldest);
            }
            pop(&stackOldest);  
        } else if (type == 3) {
            if (isEmpty(&stackOldest)) {
                transfer(&stackNewest, &stackOldest);
            }
            printf("%d\n", peek(&stackOldest));  
        }
    }

    return 0;
}
