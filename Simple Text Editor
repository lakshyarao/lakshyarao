#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_LEN 1000000

typedef struct {
    char *data[MAX_LEN];
    int top;
} Stack;

// Push a new state onto the stack
void push(Stack *s, const char *str) {
    s->data[++(s->top)] = strdup(str);
}

// Pop and return the top state from the stack
void pop(Stack *s) {
    if (s->top >= 0) {
        free(s->data[s->top--]);
    }
}

// Get the top element of the stack
char *peek(Stack *s) {
    return (s->top >= 0) ? s->data[s->top] : "";
}

int main() {
    int Q;
    scanf("%d", &Q);
    
    char S[MAX_LEN] = "";
    Stack history;
    history.top = -1;

    for (int i = 0; i < Q; i++) {
        int type;
        scanf("%d", &type);

        if (type == 1) { // Append operation
            char appendStr[MAX_LEN];
            scanf("%s", appendStr);
            push(&history, S); // Save current state
            strcat(S, appendStr);
        } 
        else if (type == 2) { // Delete operation
            int k;
            scanf("%d", &k);
            push(&history, S); // Save current state
            S[strlen(S) - k] = '\0';
        } 
        else if (type == 3) { // Print operation
            int k;
            scanf("%d", &k);
            printf("%c\n", S[k - 1]);
        } 
        else if (type == 4) { // Undo operation
            if (history.top >= 0) {
                strcpy(S, peek(&history));
                pop(&history);
            }
        }
    }
    return 0;
}
