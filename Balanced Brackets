#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_SIZE 1000

// Function to check if brackets are balanced
char* isBalanced(char* s) {
    char stack[MAX_SIZE]; 
    int top = -1; // Stack pointer

    for (int i = 0; s[i] != '\0'; i++) {
        char ch = s[i];

        // Push opening brackets to stack
        if (ch == '(' || ch == '{' || ch == '[') {
            stack[++top] = ch;
        } else {
            // If stack is empty, we have an unmatched closing bracket
            if (top == -1) return "NO";

            char topChar = stack[top--];

            // Check for matching pairs
            if ((ch == ')' && topChar != '(') ||
                (ch == '}' && topChar != '{') ||
                (ch == ']' && topChar != '[')) {
                return "NO";
            }
        }
    }

    // If stack is empty, brackets are balanced
    return (top == -1) ? "YES" : "NO";
}

int main() {
    int n;
    scanf("%d", &n);
    while (n--) {
        char s[MAX_SIZE];
        scanf("%s", s);
        printf("%s\n", isBalanced(s));
    }
    return 0;
}
