#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_SIZE 100000

typedef struct {
    int data[MAX_SIZE];
    int top;
} Stack;

void push(Stack *s, int value) {
    s->data[++(s->top)] = value;
}

int pop(Stack *s) {
    return s->data[(s->top)--];
}

int peek(Stack *s) {
    return s->data[s->top];
}

int isEmpty(Stack *s) {
    return s->top == -1;
}

int main() {
    int n;
    scanf("%d", &n);

    Stack stack, maxStack;
    stack.top = maxStack.top = -1;

    for (int i = 0; i < n; i++) {
        int type, value;
        scanf("%d", &type);

        if (type == 1) {  // Push operation
            scanf("%d", &value);
            push(&stack, value);
            if (isEmpty(&maxStack) || value >= peek(&maxStack)) {
                push(&maxStack, value);
            }
        } else if (type == 2) {  // Pop operation
            if (!isEmpty(&stack)) {
                int removed = pop(&stack);
                if (!isEmpty(&maxStack) && removed == peek(&maxStack)) {
                    pop(&maxStack);
                }
            }
        } else if (type == 3) {  // Get Max operation
            if (!isEmpty(&maxStack)) {
                printf("%d\n", peek(&maxStack));
            }
        }
    }

    return 0;
}
